#include "layers.conf"
#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    trackball_listener {
        compatible = "zmk,input-listener";
        device = <&trackball_split>;

        snipe {
            layers = <SNIPE>;
            input-processors = <&zip_xy_scaler 1 3>;
        };

        scroll {
            layers = <SCROLL>;
            input-processors =
                <&zip_xy_scaler 1 3>,
                <&zip_xy_to_scroll_mapper>,
                <&zip_scroll_transform (INPUT_TRANSFORM_Y_INVERT)>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        kp_sl: behavior_kp_sl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&sl>, <&kp>;
        };

        ht: behavior_hold_tap_key {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        settings_trigger {
            if-layers = <1 4>;
            then-layer = <6>;
        };
    };

    combos {
        compatible = "zmk,combos";

        KP_Z {
            bindings = <&kp Z>;
            key-positions = <0 1>;
        };

        KP_Q {
            bindings = <&kp Q>;
            key-positions = <1 2>;
        };

        c_bps {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp BSPC>;
        };

        c_ctrl_bps {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp LC(BSPC)>;
        };

        c_colon {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp COLON>;
        };

        c_semicolon {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp SEMI>;
        };

        c_prog_sym {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&sl PROG_SYM>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <12 17>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "Alpha";
            bindings = <
  &ht ESC Q    &kp W        &kp F        &kp P          &kp B            &ht COLON J        &ht AMPERSAND L  &ht ASTERISK U  &ht QUESTION Y  &ht EXCLAMATION SQT
  &hm LGUI A   &hm LALT R   &hm LSHFT S  &hm LCTRL T    &kp G            &kp M              &hm RCTRL N      &hm RSHFT E     &hm LALT I      &hm RGUI O
  &mt LC(Z) Z  &mt LC(X) X  &mt LC(C) C  &mt LC(V) D    &kp V            &ht PLUS K         &kp H            &kp COMMA       &kp PERIOD      &kp SLASH
                            &lt 7 TAB    &lt SYM ENTER  &lt NUMFN TAB    &lt NAV BACKSPACE  &lt UTIL SPACE
            >;
        };

        nav_layer {
            display-name = "Nav";
            bindings = <
  &trans           &trans  &trans  &trans       &trans    &trans  &trans    &kp UP_ARROW  &trans     &trans
  &kp LC(LS(TAB))  &trans  &trans  &kp LC(TAB)  &trans    &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &desktop
  &trans           &trans  &trans  &trans       &trans    &trans  &kp HOME  &kp PG_DN     &kp PG_UP  &kp END
                           &trans  &trans       &trans    &trans  &trans
            >;
        };

        sym_layer {
            display-name = "Sym";
            bindings = <
  &kp AT     &kp HASH  &kp DLLR  &kp PRCNT  &kp UNDER    &kp CARET  &kp AMPS  &kp STAR  &kp COLON  &kp SEMI
  &kp EQUAL  &kp APOS  &kp DQT   &kp GRAVE  &kp MINUS    &kp BSLH   &kp LPAR  &kp RPAR  &kp LBRC   &kp RBRC
  &kp TILDE  &none     &none     &none      &none        &kp PIPE   &kp LBKT  &kp RBKT  &kp LT     &kp GT
                       &trans    &trans     &trans       &trans     &trans
            >;
        };

        prog_sym_layer {
            display-name = "Prog Sym";
            bindings = <
  &DBL_EQL  &TRPL_EQL  &NOT_EQL  &GT_EQL  &trans    &trans  &LOG_AND   &LOG_OR    &INCLUDE    &trans
  &PRN      &BRC       &BKT      &ANGL    &trans    &trans  &ARROW_OP  &ARROW_FN  &DBL_QT     &trans
  &DEC      &INC       &trans    &trans   &trans    &trans  &LSFT_OP   &RSFT_OP   &UPROPERTY  &UFUNCTION
                       &trans    &trans   &trans    &trans  &trans
            >;
        };

        numfn_layer {
            display-name = "Num/FN";
            bindings = <
  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &kp SLASH  &kp N7  &kp N8  &kp N9  &kp MINUS
  &kp F5  &kp F6   &kp F7   &kp F8   &trans    &kp STAR   &kp N4  &kp N5  &kp N6  &kp PLUS
  &kp F1  &kp F2   &kp F3   &kp F4   &trans    &trans     &kp N1  &kp N2  &kp N3  &kp EQUAL
                   &trans   &trans   &trans    &kp N0     &trans
            >;
        };

        util_layer {
            display-name = "Util";
            bindings = <
  &trans  &trans         &kp KP_NUMLOCK  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans         &trans          &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &kp LG(LS(S))  &kp DEL         &trans  &trans    &trans  &trans  &trans  &trans  &trans
                         &trans          &trans  &trans    &trans  &trans
            >;
        };

        settings_layer {
            display-name = "Settings";
            bindings = <
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4      &trans  &trans  &kp K_SLEEP  &kp C_SLEEP_MODE  &kp C_SLEEP
  &bootloader   &sys_reset    &studio_unlock  &trans        &bt BT_CLR_ALL    &trans  &trans  &trans       &trans            &trans
  &trans        &trans        &trans          &trans        &bt BT_CLR        &trans  &trans  &trans       &trans            &soft_off
                              &trans          &trans        &trans            &trans  &trans
            >;
        };

        mouse_layer {
            display-name = "Mouse";
            bindings = <
  &trans  &trans    &trans    &trans    &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &mkp MB1  &mo 8     &mkp MB2  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans    &mkp MB3  &trans    &trans    &trans  &trans  &trans  &trans  &trans
                    &trans    &trans    &trans    &trans  &trans
            >;
        };

        scroll_layer {
            display-name = "Scroll";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };

   snipe_layer {
            display-name = "Snipe";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };}
    macros {
        LOG_AND: LOG_AND {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp AMPS &kp AMPS>;
        };

        LOG_OR: LOG_OR {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp PIPE &kp PIPE>;
        };

        INCLUDE: INCLUDE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp I &kp N &kp C &kp L &kp U &kp D &kp E &kp DQT &kp DQT &kp LEFT>;
        };

        ARROW_OP: ARROW_OP {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp MINUS &kp GT>;
        };


    };
};
